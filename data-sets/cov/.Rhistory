data[1]
data <- matrix(0,5000,1)
data[1]
for (i in 2:5000) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
y
}
for (i in seq(2, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
y
}
for (i in seq(2, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
data[i] = y
}
for (i in seq(2, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
print( y)
}
data[1] = 4.433
data <- matrix(0,5000,1)
data[1]
for (i in seq(2, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
data[i] <- y
}
View(data)
data <- array(0,c(5000,1))
data[1]
for (i in seq(2, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
data[i] <- y
}
for (i in seq(2, 3)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
i
y
}
for (i in seq(2, 3)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
print(i)
print(y)
}
data[1] = 4.433
for (i in seq(2, 3)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
print(i)
print(y)
}
for (i in seq(2, 3)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
print(y_2)
print(y_1)
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
print(i)
print(y)
}
data <- array(0,c(5000,1))
for (i in seq(2, 2)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
print(y_2)
print(y_1)
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
print(i)
print(y)
}
data[1]
data[0]
View(data)
for (i in seq(3, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
mi <- 0
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
data[i] = y
}
plot(data)
plot(data, type="l", col="b")
plot(data, type="l", col="blue")
data <- array(0,c(5000,1))
data <- array(0,c(5000,1))
mi <- 0
N <- 1
for (i in seq(3, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
if (i %% 100 == 0) {
print("change")
N <- N + 1
mi <- mi + N/16
}
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
data[i] = y
}
plot(data, type="l", col="blue")
data <- array(0,c(5000,1))
mi <- 0
N <- 1
for (i in seq(3, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
if (i %% 100 == 0) {
print("change")
N <- N + 1
print(N)
mi <- mi + N/16
}
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
data[i] = y
}
plot(data[4700:5000], type="l", col="blue")
plot(data[4000:5000], type="l", col="blue")
setwd('/Users/wasnio/Documents/praca/read')
data <- read.csv(file="last.txt", sep=";", header= FALSE)
plot(data$V2, type="lines", col="blue",
,xlab="Odczyt czujnika"
,ylab="Wartosci"
)
plot(data$V1, type="lines", col="blue",
,xlab="Odczyt czujnika"
,ylab="Wartosci"
)
title("Czujnik swiatla")
setEPS()
postscript("ch-5-device.eps")
par(mfrow = c(2, 1))
plot(data$V2, type="lines", col="blue",
,xlab="Odczyt czujnika"
,ylab="Wartosci"
)
title("Czujnik swiatla")
plot(data$V1, type="lines", col="blue",
,xlab="Odczyt czujnika"
,ylab="Wartosci"
)
title("Czujnik odleglosci")
device.off()
dev.off()
abline(a = 1, b = 2, col = 2)
abline(a = 0, b = 2, col = 2)
abline(h=33,col=4,lty=2)
abline(v=33,col=4,lty=2)
abline(v=33,col=4,lty=2)
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
View(data)
data <- array(0,c(5000,1))
mi <- 0
N <- 1
for (i in seq(3, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
if (i %% 100 == 0) {
print("change")
N <- N + 1
print(N)
mi <- mi + N/16
}
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
data[i] = y
}
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
abline(v=seq(4500,5000,100),col="red")
seq(4500,5000,100)
abline(v=seq(4500,5000,100),col="red")
c(seq(4500,5000,100))
abline(v=c(seq(4500,5000,100)),col="red")
abline(v=c(4500,4600),col="red")
abline(v=2333,col="red")
abline(v=2333,col="red", lty=3)
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
abline(v=2333,col="red", lty=3)
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
abline(v=2333,col="red", lty=3)
abline(v=2333,col="red", lty=3)
abline(h=2333,col="red", lty=3)
abline(h=2333,col="red", lty=3)
abline(h=2333,col=2, lty=3)
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
abline(h=2333,col=2, lty=3)
abline(h=2333,col=1, lty=3)
abline(h=2333,col=1, lty=3)
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
abline(h=2333,col=1, lty=3)
abline(v=15, col="blue")
abline(v=c(seq(4500,5000,100)), col="blue")
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
plot(seq(450,500,1), data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
seq(450,500,1)
plot(seq(451,500,1), data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
View(data)
dd <- data[4500:5000]
plot(seq(449,500,1), data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
d <- seq(449,500,1)
plot(seq(450,500,1), data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
d <- seq(450,500,1)
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
abline(v=seq(0,500,10)), col="blue")
abline(v=c(seq(0,500,10)), col="blue")
abline(v=c(seq(0,500,100)), col="blue")
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
abline(v=c(seq(0,500,100)), col="red")
axis(label=FALSE)
axis(1, label=FALSE)
axis(side = 1, at = x,labels = T)
axis(side = 1, at = d,labels = T)
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
abline(v=c(seq(0,500,100)), col="red")
setEPS()
postscript("ch-5-jumping.eps")
plot(data[4500:5000], type="l", col="blue"
,xlab="Odczyt"
,ylab="Wartosci")
abline(v=c(seq(0,500,100)), col="red")
dev.off()
getwd()
setwd("/Users/wasnio/Documents/pdm/data-sets/jumping")
set.seed(1)
data <- array(0,c(5000,1))
mi <- 0
N <- 1
for (i in seq(3, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
if (i %% 100 == 0) {
print("change")
N <- N + 1
print(N)
mi <- mi + N/16
}
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
data[i] = y
}
dd <- data[4500:5000]
d <- seq(450,500,1)
write.csv(data, file = "01.csv")
write.csv(data, file = "01.csv", row.names=FALSE)
12 + "fa"
paste(12, "ad")
paste(12, "ad", sep="")
for (j in seq(2, 20)) {
set.seed(j)
data <- array(0,c(5000,1))
mi <- 0
N <- 1
for (i in seq(3, 5000)) {
y_2 <- data[i-2]
y_1 <- data[i-1]
if (i %% 100 == 0) {
print("change")
N <- N + 1
print(N)
mi <- mi + N/16
}
y <- 0.6*y_1 - 0.5*y_2 + rnorm(1,mean=mi, sd=1.5)
data[i] = y
}
dd <- data[4500:5000]
d <- seq(450,500,1)
write.csv(data, file = paste(j, ".csv", sep=""), row.names=FALSE)
}
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
Sigma <- matrix(c(10,3,3,2),2,2)
View(Sigma)
View(Sigma)
View(Sigma)
r <- mvrnorm(n = 1, rep(0, 2), Sigma)
Sigma <- matrix(c(10,3,3,2),2,2)
r <- mvrnorm(n = 1, rep(0, 2), Sigma)
r
r <- c(r, mvrnorm(n = 1, rep(0, 2), Sigma))
r
x <- []
x <- c()
r <-  mvrnorm(n = 1, rep(0, 2), Sigma)
append(x, r)
x <- append(x, r)
r <-  mvrnorm(n = 1, rep(0, 2), Sigma)
x <- append(x, r)
x
data <- array(0,c(5000,1))
View(data)
write.csv(x, file = "x.csv", row.names=FALSE)
iter <- 10
out <- matrix(NA, nrow=iter, ncol=2)
for (n in 1:iter)
out[n,] <- mvrnorm(n = 1, rep(0, 2), Sigma)
View(out)
Sigma <- matrix(c(1,-4/5 + (N-2)/500 ,-4/5 + (N-2)/500,1),2,2)
N <- 1
Sigma <- matrix(c(1,-4/5 + (N-2)/500 ,-4/5 + (N-2)/500,1),2,2)
View(Sigma)
iter <- 5000
out <- matrix(NA, nrow=iter, ncol=2)
N <- 1
Sigma <- matrix(c(1,-4/5 + (N-2)/500 ,-4/5 + (N-2)/500,1),2,2)
N <- 1
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
for (n in 1:iter) {
out[n,] <- mvrnorm(n = 1, rep(0, 2), Sigma)
if (i %% 100 == 0) {
print("change")
N <- N + 1
print(N)
if (N %% 2 == 0) {
Sigma <- matrix(c(1,4/5 + (N-2)/500 ,4/5 + (N-2)/500,1),2,2)
} else {
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
}
}
}
for (n in 1:iter) {
out[n,] <- mvrnorm(n = 1, rep(0, 2), Sigma)
if (n %% 100 == 0) {
print("change")
N <- N + 1
print(N)
if (N %% 2 == 0) {
Sigma <- matrix(c(1,4/5 + (N-2)/500 ,4/5 + (N-2)/500,1),2,2)
} else {
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
}
}
}
View(out)
plot(out$V2, type="lines", col="blue",
,xlab="Odczyt czujnika"
,ylab="Wartosci"
)
plot(out$V1, type="lines", col="blue",
out$
1
out
out[:,1]
out(:,1)
out[:]
out[1,1]
out[1:5000,1]
par(mfrow = c(2, 1))
plot(out[1:5000,1], type="lines", col="blue",
,xlab="Odczyt czujnika"
,ylab="Wartosci"
)
plot(out[1:5000,2], type="lines", col="blue",
,xlab="Odczyt czujnika"
,ylab="Wartosci"
)
par(mfrow = c(2, 1))
plot(out[4000:5000,1], type="lines", col="blue",
,xlab="Odczyt czujnika"
,ylab="Wartosci"
)
plot(out[4000:5000,2], type="lines", col="blue",
,xlab="Odczyt czujnika"
,ylab="Wartosci"
)
plot(out[4000:5000,1], type="lines", col="blue",
,xlab="Odczyt"
,ylab="Wartosci"
)
abline(v=c(seq(0,1000, 10)), col="red")
plot(out[4500:5000,1], type="lines", col="blue",
,xlab="Odczyt"
,ylab="Wartosci"
)
abline(v=c(seq(0,5000, 100)), col="red")
par(mfrow = c(2, 1))
plot(out[4500:5000,1], type="lines", col="blue",
,xlab="Odczyt"
,ylab="Wartosci"
)
abline(v=c(seq(0,5000, 100)), col="red")
plot(out[4500:5000,2], type="lines", col="blue",
,xlab="Odczyt"
,ylab="Wartosci"
)
abline(v=c(seq(0,5000, 100)), col="red")
setEPS()
postscript("ch-5-cov.eps")
par(mfrow = c(2, 1))
plot(out[4500:5000,1], type="lines", col="blue",
,xlab="Odczyt"
,ylab="Wartosci"
)
abline(v=c(seq(0,5000, 100)), col="red")
plot(out[4500:5000,2], type="lines", col="blue",
,xlab="Odczyt"
,ylab="Wartosci"
)
abline(v=c(seq(0,5000, 100)), col="red")
dev.off()
setwd("/Users/wasnio/Documents/pdm/data-sets/cov")
for (j in seq(2, 20)) {
iter <- 5000
out <- matrix(NA, nrow=iter, ncol=2)
N <- 1
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
for (n in 1:iter) {
out[n,] <- mvrnorm(n = 1, rep(0, 2), Sigma)
if (n %% 100 == 0) {
print("change")
N <- N + 1
print(N)
if (N %% 2 == 0) {
Sigma <- matrix(c(1,4/5 + (N-2)/500 ,4/5 + (N-2)/500,1),2,2)
} else {
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
}
}
}
ds
]}
for (j in seq(2, 20)) {
set.seed(j)
iter <- 5000
out <- matrix(NA, nrow=iter, ncol=2)
N <- 1
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
for (n in 1:iter) {
out[n,] <- mvrnorm(n = 1, rep(0, 2), Sigma)
if (n %% 100 == 0) {
print("change")
N <- N + 1
print(N)
if (N %% 2 == 0) {
Sigma <- matrix(c(1,4/5 + (N-2)/500 ,4/5 + (N-2)/500,1),2,2)
} else {
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
}
}
}
write.csv(x, file = paste(j, ".csv", sep=""), row.names=FALSE)
}
for (j in seq(2, 20)) {
set.seed(j)
iter <- 5000
out <- matrix(NA, nrow=iter, ncol=2)
N <- 1
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
for (n in 1:iter) {
out[n,] <- mvrnorm(n = 1, rep(0, 2), Sigma)
if (n %% 100 == 0) {
print("change")
N <- N + 1
print(N)
if (N %% 2 == 0) {
Sigma <- matrix(c(1,4/5 + (N-2)/500 ,4/5 + (N-2)/500,1),2,2)
} else {
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
}
}
}
write.csv(out, file = paste(j, ".csv", sep=""), row.names=FALSE)
}
