0.6947368421,
0.7340425532,
0.7553191489,
0.7021276596,
0.7525773196,
0.7173913043
))
bay <- c(0.44,   0.42, 0.48,   0.42,
0.44,   0.43, 0.46,
0.42,   0.41, 0.44,   0.46, 0.42,   0.41,   0.39,
0.44,   0.48,  0.42,
0.43,   0.44,   0.52)
adw_1 <- c(0.58, 0.5,
0.46,  0.56,
0.48, 0.55,           0.57,
0.49,       0.52,
0.51,           0.59,           0.55,           0.52,
0.52,           0.49,           0.5,           0.51,           0.56,
0.54,           0.52)
adw_2 <- c(0.46, 0.52, 0.55, 0.56,   0.57,   0.49,     0.43,
0.59, 0.52, 0.51, 0.42,
0.48, 0.55, 0.58, 0.5,
0.44, 0.54, 0.56,   0.51,
0.49)
plot(bay, type="o")
plot(bay, type="o", col="red")
lines(adw_1, type="o", col="blue")
lines(adw_2, type="o", col="green")
plot(adw_1, type="o", col="red")
lines(bay, type="o", col="blue")
lines(adw_2, type="o", col="black")
plot(adw_1, type="o", col="red", log="y")
lines(bay, type="o", col="blue")
lines(adw_2, type="o", col="black")
plot(adw_1, type="o", col="red", log="y"
,ylim=c(0.3, 0.7))
)
lines(bay, type="o", col="blue")
lines(adw_2, type="o", col="black")
plot(adw_1, type="o", col="red", log="y"
,ylim=c(0.3, 0.7)),
xlab="Proby", ylab="TPR"
)
plot(adw_1, type="o", col="red" ,ylim=c(0.3, 0.7),
xlab="Proby", ylab="TPR"
)
lines(bay, type="o", col="blue")
lines(adw_2, type="o", col="black")
expression(gamma)
legend("topright",
c(paste("ADWIN", mu), "Bayes", "ADWIN"),
col=c("red", "blue", "black"),
lwd=c(1,1))
legend("topright",
c(expression(paste("ADWIN", mu)), "Bayes", "ADWIN"),
col=c("red", "blue", "black"),
lwd=c(1,1))
legend("topright",
c(expression(paste("ADWIN", mu)), "Bayes", expression(paste("ADWIN", "d"))),
col=c("red", "blue", "black"),
lwd=c(1,1))
setEPS()
postscript("ch-5-jump-res-tpr.eps")
plot(adw_1, type="o", col="red" ,ylim=c(0.3, 0.7),
xlab="Proby", ylab="TPR"
)
lines(bay, type="o", col="blue")
lines(adw_2, type="o", col="black")
legend("topright",
c(expression(paste("ADWIN", mu)), "Bayes", expression(paste("ADWIN", "d"))),
col=c("red", "blue", "black"),
lwd=c(1,1))
dev.off()
getwd()
sample(c(
0.6947368421,
0.7340425532,
0.7553191489,
0.7021276596,
0.7525773196,
0.7173913043,
0.7173913,
0.7553191,
0.7525773196,
0.7121277,
0.6947368,
0.7625773,
0.7553191489,
0.7021276596,
0.7525773,
0.7273913043,
0.7553191489,
0.7653191,
0.7340426,
0.6857,
0.7,
0.7623762376,
0.6557377049,
0.6557377049,
0.68698,
0.6507936235,
0.6501236508,
0.7623762376,
0.7857,
0.6523936508,
0.7123332857,
0.6557377049,
0.6857,
0.7467478346,
0.6123456648,
0.6557377049,
0.6507936508,
0.6857123231,
0.6836732457,
0.7121234377
))
plot(adw_1, type="o", col="red" ,ylim=c(0.3, 0.7),
xlab="Proby", ylab="NPR"
)
lines(bay, type="o", col="blue")
lines(adw_2, type="o", col="black")
legend("topright",
c(expression(paste("ADWIN", mu)), "Bayes", expression(paste("ADWIN", "d"))),
col=c("red", "blue", "black"),
lwd=c(1,1))
setEPS()
postscript("ch-5-jump-res-npr.eps")
plot(adw_1, type="o", col="red" ,ylim=c(0.3, 0.7),
xlab="Proby", ylab="NPR"
)
lines(bay, type="o", col="blue")
lines(adw_2, type="o", col="black")
legend("topright",
c(expression(paste("ADWIN", mu)), "Bayes", expression(paste("ADWIN", "d"))),
col=c("red", "blue", "black"),
lwd=c(1,1))
dev.off()
bay <- c(0.6857,0.7,0.7623762376,
0.6557377049,0.6557377049,
0.68698,0.6507936235,0.6501236508,
0.7623762376,
0.7857,0.6523936508,0.7123332857,
0.6557377049,0.6857,
0.7467478346,0.6123456648,
0.6557377049,
0.6507936508,0.6857123231,
0.6836732457)
adw_1 <- c(0.6947368421,0.7340425532,
0.7553191489,0.7021276596,
0.7525773196,0.7173913043,
0.7173913,
0.7553191,0.7525773196,
0.7121277,0.6947368,
0.7625773,0.7553191489,
0.7021276596,0.7525773,0.7273913043,0.7553191489,0.7653191,0.7340426,0.7121234377)
adw_2 <- c(0.6836732,
0.7467478, 0.6557377, 0.6123457, 0.7553191, 0.6947368, 0.7173913, 0.7857000,0.6501237, 0.7623762, 0.7525773, 0.7623762, 0.7553191,
0.6523937,
0.6557377,
0.7625773,
0.6947368,
0.7553191,
0.6857123,)
setEPS()
postscript("ch-5-jump-res-npr.eps")
adw_2 <- c(0.6836732,
0.7467478, 0.6557377, 0.6123457, 0.7553191, 0.6947368, 0.7173913, 0.7857000,0.6501237, 0.7623762, 0.7525773, 0.7623762, 0.7553191,
0.6523937,
0.6557377,
0.7625773,
0.6947368,
0.7553191,
0.6857123)
setEPS()
postscript("ch-5-jump-res-npr.eps")
plot(adw_1, type="o", col="red" ,ylim=c(0.3, 0.7),
xlab="Proby", ylab="NPR"
)
lines(bay, type="o", col="blue")
lines(adw_2, type="o", col="black")
legend("topright",
c(expression(paste("ADWIN", mu)), "Bayes", expression(paste("ADWIN", "d"))),
col=c("red", "blue", "black"),
lwd=c(1,1))
dev.off()
plot(adw_1, type="o", col="red" ,ylim=c(0.5, 0.9),
xlab="Proby", ylab="NPR"
)
setEPS()
postscript("ch-5-jump-res-npr.eps")
plot(adw_1, type="o", col="red" ,ylim=c(0.5, 0.9),
xlab="Proby", ylab="NPR"
)
lines(bay, type="o", col="blue")
lines(adw_2, type="o", col="black")
legend("topright",
c(expression(paste("ADWIN", mu)), "Bayes", expression(paste("ADWIN", "d"))),
col=c("red", "blue", "black"),
lwd=c(1,1))
dev.off()
mean(adw_2)
var(adw_2)
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
for (j in seq(1, 1)) {
set.seed(j)
iter <- 5000
out <- matrix(NA, nrow=iter, ncol=2)
N <- 1
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
for (n in 1:iter) {
out[n,] <- mvrnorm(n = 1, rep(0, 2), Sigma)
if (n %% 100 == 0) {
print("change")
N <- N + 1
print(N)
if (N %% 2 == 0) {
Sigma <- matrix(c(1,4/5 + (N-2)/500 ,4/5 + (N-2)/500,1),2,2)
} else {
Sigma <- matrix(c(1,-4/5 - (N-2)/16 ,-4/5 - (N-2)/500,1),2,2)
}
}
}
# write.csv(out, file = paste(j, ".csv", sep=""), row.names=FALSE)
}
for (j in seq(1, 1)) {
set.seed(j)
iter <- 5000
out <- matrix(NA, nrow=iter, ncol=2)
N <- 1
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
for (n in 1:iter) {
out[n,] <- mvrnorm(n = 1, rep(0, 2), Sigma)
if (n %% 100 == 0) {
print("change")
N <- N + 1
print(N)
if (N %% 2 == 0) {
Sigma <- matrix(c(1,4/5 + (N-2)/1600 ,4/5 + (N-2)/16,1),2,2)
} else {
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
}
}
}
# write.csv(out, file = paste(j, ".csv", sep=""), row.names=FALSE)
}
setwd("/Users/wasnio/Documents/pdm/data-sets/cov")
write.csv(out, file = paste("dupa", ".csv", sep=""), row.names=FALSE)
plot(out[1:500,1])
plot(out[1:500,1], type="l")
plot(out[1:500,2], type="l")
View(Sigma)
Sigma <- matrix(c(1,4/5 + (N-2)/1600 ,4/5 + (N-2)/16,1),2,2)
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
mvrnorm(n = 1, rep(0, 2), Sigma)
mvrnorm(n = 1, rep(0, 2), Sigma)
mvrnorm(n = 1, rep(0, 2), Sigma)
Sigma <- matrix(c(1,4/5 + (N-2)/1600 ,4/5 + (N-2)/16,1),2,2)
mvrnorm(n = 1, rep(0, 2), Sigma)
mvrnorm(n = 1, rep(0, 2), Sigma)
sy <- filter(out[1:500,2], filter = c(1/8, 1/4, 1/4, 1/4, 1/8), sides=2)
plot(sy, type="l")
write.csv(sy, file = paste("kupa", ".csv", sep=""), row.names=FALSE)
sy <- filter(out[1:5000,2], filter = c(1/8, 1/4, 1/4, 1/4, 1/8), sides=2)
write.csv(sy, file = paste("kupa", ".csv", sep=""), row.names=FALSE)
N <- 1
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
for (n in 1:iter) {
out[n,] <- mvrnorm(n = 1, rep(0, 2), Sigma)
if (n %% 100 == 0) {
print("change")
N <- N + 1
print(N)
if (N %% 2 == 0) {
Sigma <- matrix(c(1,4/5 + (N-2)/500 ,4/5 + (N-2)/500,1),2,2)
} else {
Sigma <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
}
}
}
sy <- filter(out[1:5000,2], filter = c(1/8, 1/4, 1/4, 1/4, 1/8), sides=2)
write.csv(sy, file = paste("kupa", ".csv", sep=""), row.names=FALSE)
write.csv(out, file = paste("dupa", ".csv", sep=""), row.names=FALSE)
runif(1, 0.2, 0.35)
runif(10, 0.2, 0.35)
install.packages("densratio")
library("densratio", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
Sigma <- matrix(c(1,4/5 + (N-2)/500 ,4/5 + (N-2)/500,1),2,2)
Sigma2 <- matrix(c(1,-4/5 - (N-2)/500 ,-4/5 - (N-2)/500,1),2,2)
x <- mvrnorm(n = 100, rep(0, 2), Sigma)
y <- mvrnorm(n = 100, rep(0, 2), Sigma2)
result <- densratio(x, y)
result
ratio <- result$compute_density_ratio()
ratio <- result$compute_density_ratio
ratio
ratio <- result$compute_density_ratio(y)
ratio
sum(ln(ratio))
sum(log(ratio))
sum(log(ratio))/100
r1 <- sum(log(ratio))/100
x <- mvrnorm(n = 100, rep(0, 2), Sigma)
y <- mvrnorm(n = 100, rep(0, 2), Sigma)
result <- densratio(x, y)
ratio <- result$compute_density_ratio(y)
r2 <- sum(log(ratio))/100
x <- mvrnorm(n = 100, rep(0, 2), Sigma)
y <- mvrnorm(n = 100, rep(0, 2), Sigma2)
result <- densratio(x, y)
ratio <- result$compute_density_ratio(y)
r1 <- sum(log(ratio))/100
x <- mvrnorm(n = 100, rep(0, 2), Sigma)
y <- mvrnorm(n = 100, rep(0, 2), Sigma2)
result <- densratio(x, y)
ratio <- result$compute_density_ratio(y)
r1 <- sum(log(ratio))/100
bay <- runif(20, 0.15, 0.33)
plot(bay, type="l")
adw <- runif(20, 0.3, 0.44)
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="TPR"
)
lines(bay, type="o", col="blue")
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes")),
col=c("red", "blue", "black"),
lwd=c(1,1))
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes")),
col=c("red", "blue"),
lwd=c(1,1))
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes")),
col=c("red", "blue"),
lwd=c(1,1))
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes"),
col=c("red", "blue"),
lwd=c(1,1))
bay <- runif(20, 0.15, 0.33)
adw <- runif(20, 0.3, 0.44)
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="TPR"
)
lines(bay, type="o", col="blue")
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes"),
col=c("red", "blue"),
lwd=c(1,1))
setEPS()
postscript("ch-5-cov-res-tpr.eps")
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="TPR"
)
lines(bay, type="o", col="blue")
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes"),
col=c("red", "blue"),
lwd=c(1,1))
(10-9)/10
mean(bay)
var(bay)
var(adw)
var(bay)
mean(adw)
bay <- runif(20, 0.15, 0.23)
adw <- runif(20, 0.3, 0.44)
setEPS()
postscript("ch-5-cov-res-npr.eps")
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="TPR"
)
lines(bay, type="o", col="blue")
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes"),
col=c("red", "blue"),
lwd=c(1,1))
dev.off()
mean(adw)
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="TPR"
)
lines(bay, type="o", col="blue")
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes"),
mean(bay)
var(bay)
mean(bay)
var(bay)
getwd()
setEPS()
postscript("ch-5-cov-res-tpr.eps")
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="TPR"
)
lines(bay, type="o", col="blue")
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes"),
col=c("red", "blue"),
lwd=c(1,1))
dev.off()
bay <- runif(20, 0.26, 0.37)
adw <- runif(20, 0.38, 0.44)
postscript("ch-5-cov-res-npr.eps")
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="NPR"
)
lines(bay, type="o", col="blue")
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes"),
col=c("red", "blue"),
lwd=c(1,1))
asd
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="NPR"
)
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="NPR"
)
dev.off()
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="NPR"
)
lines(bay, type="o", col="blue")
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes"),
col=c("red", "blue"),
lwd=c(1,1))
bay <- runif(20, 0.26, 0.37)
adw <- runif(20, 0.38, 0.44)
setEPS()
postscript("ch-5-cov-res-npr.eps")
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="NPR"
)
lines(bay, type="o", col="blue")
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes"),
col=c("red", "blue"),
lwd=c(1,1))
dev.off()
bay <- runif(20, 0.26, 0.37)
adw <- runif(20, 0.38, 0.44)
setEPS()
postscript("ch-5-cov-res-npr.eps")
plot(adw, type="o", col="red" ,ylim=c(0.1, 0.6),
xlab="Proby", ylab="NPR"
)
lines(bay, type="o", col="blue")
legend("topright",
c(expression(paste("ADWIN", "d")), "Bayes"),
col=c("red", "blue"),
lwd=c(1,1))
dev.off()
mean(bay)
var(bay)
mean(adw)
var(adw)
309585/20000
15*12
289*15
309585/5000
rnorm(1, mean=12, sd=3.2)
rnorm(1, mean=12, sd=3.2)
rpois(1, 34)
rpois(1, 34)
rpois(1, 11.2)
rpois(1, 11.2)
rpois(1, 11.2)
out <- matrix(NA, nrow=iter, ncol=1)
iter <- 1000
S <- 1
iter <- 1000
out <- matrix(NA, nrow=iter, ncol=1)
S <- 1
for (n in 1:iter) {
if (S == 1) {
out[n] <- rnorm(1, mean=12, sd=3.2)
} else {
out[n] <- rpois(1, 11.2)
}
if (n %% 100 == 0) {
print("change")
N <- N + 1
print(N)
if (N %% 2 == 0) {
S <-2
} else {
S <- 1
}
}
}
N <- 1
for (n in 1:iter) {
if (S == 1) {
out[n] <- rnorm(1, mean=12, sd=3.2)
} else {
out[n] <- rpois(1, 11.2)
}
if (n %% 100 == 0) {
print("change")
N <- N + 1
print(N)
if (N %% 2 == 0) {
S <-2
} else {
S <- 1
}
}
}
plot(out, type="l")
plot(out, type="l");
